/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3
#define RPG     4
#define MEDIA   5

&mt {
    tapping-term-ms = <140>;
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &mt LCTRL TAB   &kp Q   &kp W &kp E &kp R     &kp T                   &kp Y &kp U  &kp I     &kp O   &kp P    &kp SQT
   &kp BSPC        &kp A   &kp S &kp D &kp F     &kp G                   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp MINUS
   &kp LSHFT       &kp Z   &kp X &kp C &kp V     &kp B                   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &mt RSHFT RET
                                       &kp LGUI  &mo LOWER   &kp SPACE   &mo RAISE    &kp RALT
                        >;
                };
                lower_layer {
                        bindings = <
   &kp ESC  &kp N1      &kp N2     &kp N3     &kp N4       &kp N5                        &kp N6     &kp N7        &kp N8 &kp N9 &kp N0    &kp EQUAL
   &kp DEL  &kp LG(J)   &kp LG(K)  &kp LG(L)  &kp LG(SEMI) &kp LC(TAB)                   &tog RPG   &tog MEDIA    &trans &trans &trans    &kp PLUS
   &trans   &kp LG(N1)  &kp LG(N2) &kp LG(N3) &kp LG(N4)   &kp LC(LS(TAB))               &trans     &trans        &trans &trans &kp GRAVE &kp PIPE
                                              &trans       &trans             &kp RET    &trans     &trans
                        >;
                };
                 raise_layer {
                        bindings = <
   &trans  &kp F1 &kp F2  &kp F3  &kp F4  &trans                      &kp HOME &kp PG_UP &trans  &trans     &trans    &trans
   &trans  &kp F5 &kp F6  &kp F7  &kp F8  &trans                      &kp LEFT &kp DOWN  &kp UP  &kp RIGHT  &kp LBKT  &kp RBKT
   &trans  &kp F9 &kp F10 &kp F11 &kp F12 &trans                      &kp END  &kp PG_DN &kp DEL &trans     &trans    &trans
                                  &trans  &mo ADJUST     &trans       &trans   &trans
                        >;
                };
                adjust_layer {
                        bindings = <
   &rgb_ug RGB_BRI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_EFF &none &rgb_ug RGB_TOG    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
   &rgb_ug RGB_BRD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_EFR &none &none              &none        &none        &none        &none        &none        &none
   &none           &none           &none           &none           &none &none              &none        &none        &none        &none        &none        &none
                                                   &trans          &trans         &trans    &trans       &trans
                        >;
                };
                rpg_layer {
                        bindings = <
   &trans &trans &trans &trans &trans &trans                &trans   &kp X      &kp UP   &kp S     &trans  &trans
   &trans &trans &trans &trans &trans &trans                &trans   &kp LEFT   &kp DOWN &kp RIGHT &trans  &trans
   &trans &trans &trans &trans &trans &trans                &kp Z    &trans     &trans   &trans    &trans  &kp RSHFT
                               &trans &trans     &kp RET    &trans   &tog RPG
                        >;
                };
                media_layer {
                        bindings = <
   &trans &trans &trans &trans &trans &trans                &kp LC(DEL) &trans     &kp I    &trans    &kp Q   &trans
   &trans &trans &trans &trans &trans &trans                &kp LS(A)   &kp LT     &kp UP   &kp GT    &kp DEL &trans
   &trans &trans &trans &trans &trans &trans                &kp HOME    &kp LEFT   &kp DOWN &kp RIGHT &kp END &trans
                               &trans &trans     &trans     &trans      &tog MEDIA
                        >;
                };

        };
};
